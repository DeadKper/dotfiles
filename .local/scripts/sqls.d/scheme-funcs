#!/bin/fish

if test (count $argv) -lt 2
    echo "usage: $(basename (status -f)) scheme output-folder"
    return 1
end

if not test -d "$argv[2]"
    mkdir "$argv[2]"
else
    echo output dir already exists, please remove it or give a different output folder
    return 1
end

echo 'parsing data...'
set -l data (rg -ni '^create (or replace )?function' "$argv[1]" | awk -F : '{print $1}')
set -l size (wc -l < "$argv[1]")
set -l last (lines "$argv[1]" (math $data[(count $data)] + 1) $size | rg -ni -m 1 '^create' | sd '^(\d+).*' '$1')
set -a data (math $data[(count $data)] + $last)

set -l tmp_scheme "/tmp/scheme_funcs_$(date '+%Y-%m-%d_%H:%M:%S')"
lines "$argv[1]" $data[1] $data[(count $data)] >"$tmp_scheme"
set -l data (rg -ni '^create (or replace )?function' "$tmp_scheme" | awk -F : '{print $1}')
set -l size (count $data)
set -a data (wc -l < "$tmp_scheme")
set -l output
set -l name

echo printing functions...
for i in (seq $size)
    set name (lines "$tmp_scheme" "$data[$i]" | sd -f i '^create (or replace )?function (public\.)?([^(]+).*' '$3')
    set output "$argv[2]/$name.sql"

    if test -f "$output"
        set output $argv[2]'/'$name'_'$i'.sql'
    end

    set end (lines "$tmp_scheme" $data[$i] (math $data[(math $i + 1)] - 1) | rg -v --column '^\s*(--.*)?$' | tail -n 1 | awk -F : '{print $1}')
    lines "$tmp_scheme" $data[$i] (math $data[$i] + $end) | sd -f e '\n+$' '\n' >"$output"
    if test (math $i % 250) -eq 0
        printf 'printed: %06.2f%s\n' (math $i x 100 / $size) %
    end
end

printf '\nlast function: %s\n' $name
