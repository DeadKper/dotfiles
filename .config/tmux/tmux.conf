# [binds]
# unbinds
unbind C-b
unbind "'"
unbind %

# remap prefix from 'C-b' to 'C-a'
set -g prefix C-a
bind C-a send-prefix

# reload config file
bind R run "#{SRC}/reset; exit 0" \; source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

# switch windows
bind C-p previous-window \; refresh-client -S
bind C-n next-window \; refresh-client -S
bind 1 select-window -t 1 \; refresh-client -S
bind 2 select-window -t 2 \; refresh-client -S
bind 3 select-window -t 3 \; refresh-client -S
bind 4 select-window -t 4 \; refresh-client -S
bind 5 select-window -t 5 \; refresh-client -S
bind 6 select-window -t 6 \; refresh-client -S
bind 7 select-window -t 7 \; refresh-client -S
bind 8 select-window -t 8 \; refresh-client -S
bind 9 select-window -t 9 \; refresh-client -S
bind 0 select-window -t 10 \; refresh-client -S

# config copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-c send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# popup window
bind C-Space run "tmux display-popup -xC -yC -w80% -h80% -E '#{SRC}/popup-toggle'"
bind -T popup C-Space detach
bind -T popup M-[ copy-mode
bind -T popup M-q confirm -p 'Kill this tmux session? (y/n)' { kill-session ; detach }

# resize panes
bind -r C-Up resize-pane -L 5
bind -r C-Down resize-pane -D 5
bind -r C-Right resize-pane -U 5
bind -r C-Left resize-pane -R 5

# swap current window
bind C-b swap-window -t -1\; select-window -t -1 \; refresh-client -S
bind b swap-window -t -1\; select-window -t -1 \; refresh-client -S
bind C-f swap-window -t +1\; select-window -t +1 \; refresh-client -S
bind f swap-window -t +1\; select-window -t +1 \; refresh-client -S

# sync panes
bind S setw synchronize-panes

# exit
bind C-w kill-window
bind C-x kill-pane \; refresh-client -S
bind C-c new-window -c "#{session_path}" \; refresh-client -S
bind c new-window \; refresh-client -S
bind C command-prompt -p "New Session:" "new-session -A -s '%%' -c '#{pane_current_path}'" \; refresh-client -S
bind -n M-q confirm -p 'Kill this tmux session? (y/n)' kill-session
bind -n F11 resize-pane -Z

# [hooks]
set-hook -g session-created "run 'tmux setenv SRC \"$HOME/.config/tmux/scripts\" 2>/dev/null; exit 0'"

# [settings]

# start index at 1
set -g base-index 1
set -g pane-base-index 1

# enable mouse mode (tmux 2.1 and above)
set -g mouse on

# don't rename windows automatically
set -g allow-rename on
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# don't exit tmux when killing current session
set -g detach-on-destroy off

# allow 256 colors
set -g default-terminal 'tmux-256color'
set -ag terminal-features ",${TERM}:RGB"

# increase history limit
set -g history-limit 10000

# [appearence]

# palette
bg0="#0b0b0b"
bg1="#161616"
bg2="#262626"
bg3="#292929"

fg0="#e0e0e0"
fg1="#8d8d8d"
fg2="#6f6f6f"
fg3="#525252"

none="default"

blue="#78a9ff"
green="#42be65"
lavender="#be95ff"
magenta="#ee5396"
pink="#ff7eb6"
verdigris="#08bdba"
gray="#adb5bd"
sky="#99daff"
cyan="#25cac8"

status_color_fg="#{?client_prefix,#[fg=$green],#{?pane_in_mode,#[fg=$blue],#{?pane_synchronized,#[fg=$magenta],#[fg=$lavender]}}}"
status_color_bg="#{?client_prefix,#[bg=$green],#{?pane_in_mode,#[bg=$blue],#{?pane_synchronized,#[bg=$magenta],#[bg=$lavender]}}}"

# status bar
set -g status-style "bg=$none"
set -g status-left-length 150
set -g status-right-length 150
set -g status-left "#[fg=$bg3,bold]$status_color_bg  #(#{SRC}/cuttxt '#{session_name}' 16) #[bg=$bg3]$status_color_fg"
set -ag status-left "#[bg=$bg3 fg=bold]$status_color_fg  #(#{SRC}/uptime-display) #[bg=$none fg=$bg3,bold]"
set -g status-right "#[fg=$fg0 bg=$none]#(battery-display '')"
set -ag status-right " %H:%M "
set -ag status-right " %d %b"
set -ag status-right " #[bg=$none fg=$bg3,bold]#[bg=$bg3 fg=terminal,bold]$status_color_fg #(#{SRC}/username | #{SRC}/cuttxt 16)"
set -ag status-right " #[bg=$bg3]$status_color_fg#[fg=$bg3,bold]$status_color_bg #(#{SRC}/hostname | #{SRC}/cuttxt 16) "

# windows
active=$fg0
set -g window-status-style "bg=$none,fg=$fg2"
set -g window-status-separator ""

# -- [active white] --
set -g window-status-separator "#[fg=$fg0]#[default]"
set -g window-status-format " #{?window_flags,#[underscore],}#{window_index}:#{window_name}#[nounderscore] "
set -g window-status-current-format "#[fg=$active] #I:#W "

# -- [active reversed, last white] --
# set -g window-status-format "#[fg=$fg0]#(#{SRC}/separator #I )#[default,bold]#{?window_flags,#[fg=$active],} #I:#W "
# set -g window-status-current-format "#[fg=$active,bold,reverse]#(#{SRC}/separator #I ) #I:#W #[default,fg=$active]"

# -- [all reversed, active white] --
# set -g window-status-style "bg=$none,fg=$fg3"
# set -g window-status-format "#[default,bold,reverse]#{?window_flags,#[bg=$active],#[bg=$bg0]} #I:#W #[default]"
# set -g window-status-current-format "#[fg=$active,bg=default,reverse,bold]#[bg=$bg0] #I:#W #[default,fg=$active]"

# message area
set -g message-command-style "bg=$pink fg=$bg0"
set -g message-style "bg=$pink fg=$bg0"
set -g mode-style "bg=$pink fg=$bg0"

# support for image protocol passthrough
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# neovim
set -sg escape-time 10
set -g focus-events on

# undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# interval
set -g status-interval 1

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'roosta/tmux-fuzzback'

set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'btop "~nvim->vim *"'
set -g @resurrect-dir '~/.local/share/tmux/resurrect'
set -g @fuzzback-popup 1
set -g @fuzzback-popup-size '80%'

run '~/.config/tmux/plugins/tpm/tpm'
