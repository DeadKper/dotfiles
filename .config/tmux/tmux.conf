# [binds]
# unbinds
unbind C-b
unbind "'"
unbind %

# remap prefix from 'C-b' to 'C-a'
set -g prefix C-a
bind C-a send-prefix

# split panes with h and v 
bind C-h split-window -h -c "#{pane_current_path}"
bind C-v split-window -v -c "#{pane_current_path}"
bind M-h split-window -fh -c "#{pane_current_path}"
bind M-v split-window -fv -c "#{pane_current_path}"

# reload config file
bind R source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

# switch windows
bind C-p previous-window
bind C-n next-window

# config copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-c send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# popup window
bind -n C-Space display-popup -xC -yC -w80% -h80% -E '~/.local/scripts/tmux-popup'
bind -T popup C-Space detach
bind -T popup C-[ copy-mode
bind -T popup M-q confirm -p 'Kill this tmux session? (y/n)' { kill-session ; detach }

# hide _popup_ sessions from choose-tree
bind s choose-tree -Zs -f '#{?#{m:_popup_*,#{session_name}},0,1}'
bind w choose-tree -Zw -f '#{?#{m:_popup_*,#{session_name}},0,1}'

# hide _popup_ sessions from fzf
bind S split-window -v "tmux resize-pane ';' list-sessions -F '#S' | rg -v '^_popup_' | fzf --reverse | xargs tmux switch-client -t"
# bind W split-window -v "tmux resize-pane ';' list-windows -F '#S - #I:#W' | rg -v '^_popup_' | fzf --reverse | xargs tmux switch-client -t"

# figure out how to filter _popup_ from find-window
unbind f

# switch panes
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# resize panes
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# swap current window
bind C-b swap-window -t -1\; select-window -t -1
bind b swap-window -t -1\; select-window -t -1
bind C-f swap-window -t +1\; select-window -t +1
bind f swap-window -t +1\; select-window -t +1

# exit
bind C-w kill-window
bind C-x kill-pane
bind C-c new-window -c "#{pane_current_path}"
bind -n M-q confirm -p 'Kill this tmux session? (y/n)' kill-session
bind Q command-prompt -p "New Session:" "new-session -A -s '%%'"
bind -n F11 resize-pane -Z

# [hooks]
set-hook -g session-closed 'run-shell tmux-kill-popup'

# [settings]
# start index at 1
set -g base-index 1
set -g pane-base-index 1

# enable mouse mode (tmux 2.1 and above)
set -g mouse on

# don't rename windows automatically
set -g allow-rename on
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# don't exit tmux when killing current session
set -g detach-on-destroy off

# allow 256 colors
set -g default-terminal 'tmux-256color'
set -ag terminal-features ",${TERM}:RGB"

# [appearence]

# palette
bg0="#0b0b0b"
bg1="#161616"
bg2="#262626"
bg3="#292929"

fg0="#e0e0e0"
fg1="#8d8d8d"
fg2="#6f6f6f"

none="default"

blue="#78a9ff"
green="#42be65"
lavender="#be95ff"
magenta="#ee5396"
pink="#ff7eb6"
verdigris="#08bdba"
gray="#adb5bd"
sky="#99daff"
cyan="#25cac8"

status_color_fg="#{?client_prefix,#[fg=$green],#{?pane_in_mode,#[fg=$blue],#[fg=$lavender]}}"
status_color_bg="#{?client_prefix,#[bg=$green],#{?pane_in_mode,#[bg=$blue],#[bg=$lavender]}}"

# status bar
set -g status-style "bg=$none"
set -g status-left-length 150
set -g status-right-length 150
set -g status-left "#[fg=$bg3,bold]$status_color_bg  #{=16:session_name} #[bg=$bg3]$status_color_fg"
set -ag status-left "#[bg=$bg3 fg=bold]$status_color_fg  #(uptime -p | sed -E 's/^up //;s/ (\\w)\\w+/\\1/g;s/\\s*,\\s*/ /g') #[bg=$none fg=$bg3,bold]"
set -g status-right "#[fg=$fg0 bg=$none]#(~/.local/scripts/tmux-battery '')"
# set -ag status-right " #(~/.local/scripts/shortpath '#{pane_current_path}' '3' '15') "
set -ag status-right " %H:%M "
set -ag status-right " %d %b"
set -ag status-right " #[bg=$none fg=$bg3,bold]#[bg=$bg3 fg=terminal,bold]$status_color_fg #(ps -t #{pane_tty} -o user= --sort start | tail -1 | cut -c 1-15)"
set -ag status-right " #[bg=$bg3]$status_color_fg#[fg=$bg3,bold]$status_color_bg #H "

# windows
set -g window-status-current-style "bg=$none fg=$fg2"
set -g window-status-separator ""  # No spaces between windows in the status bar.
set -g window-status-format "#[bg=$fg2 fg=$bg0,bold] #I:#W #[bg=$none fg=$fg2]"
set -g window-status-current-format "#[bg=$fg0 fg=$bg0,bold] #I:#W #[bg=$none fg=$fg0]"

# message area
set -g message-command-style "bg=$pink fg=$bg0"
set -g message-style "bg=$pink fg=$bg0"
set -g mode-style "bg=$pink fg=$bg0"

# neovim
set -sg escape-time 10
set -g focus-events on

# undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'btop "~nvim->vim *"'
set -g @resurrect-dir '~/.local/share/tmux/resurrect'

# Remove _popup_ sessions
set -g @resurrect-hook-post-save-all 'sed -zE -i "s,(^|\n)\S+\s+_popup_[^\n]+\n,\n,g;s,^\n,,g;s,\t_popup_\S+,,g" ~/.local/share/tmux/resurrect/last'

run '~/.config/tmux/plugins/tpm/tpm'
